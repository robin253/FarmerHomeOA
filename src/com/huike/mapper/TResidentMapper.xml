<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huike.app.archive.service.IResidentService">
	<resultMap id="BaseResultMap" type="com.huike.app.archive.model.TResident">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="resident_booklet_id" jdbcType="INTEGER"
			property="residentBookletId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="relation" jdbcType="VARCHAR" property="relation" />
		<result column="sex" jdbcType="INTEGER" property="sex" />
		<result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
		<result column="nation" jdbcType="VARCHAR" property="nation" />
		<result column="id_card" jdbcType="VARCHAR" property="idCard" />
		<result column="contact" jdbcType="VARCHAR" property="contact" />
		<result column="marriage" jdbcType="INTEGER" property="marriage" />
		<result column="education" jdbcType="INTEGER" property="education" />
		<result column="politics" jdbcType="INTEGER" property="politics" />
		<result column="religion" jdbcType="VARCHAR" property="religion" />
		<result column="speciality" jdbcType="VARCHAR" property="speciality" />
		<result column="certificate" jdbcType="VARCHAR" property="certificate" />
		<result column="slack_season" jdbcType="VARCHAR" property="slackSeason" />
		<result column="disadvantaged" jdbcType="INTEGER" property="disadvantaged" />
		<result column="special" jdbcType="INTEGER" property="special" />
		<result column="job_condition" jdbcType="VARCHAR" property="jobCondition" />
		<result column="job_intention" jdbcType="VARCHAR" property="jobIntention" />
		<result column="population_property" jdbcType="VARCHAR"
			property="populationProperty" />
		<result column="xiang_id" jdbcType="BIGINT" property="xiangId" />
		<result column="cun_id" jdbcType="BIGINT" property="cunId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="is_delete" jdbcType="INTEGER" property="isDelete" />
		<result column="by1" jdbcType="VARCHAR" property="by1" />
		<result column="by2" jdbcType="VARCHAR" property="by2" />
	</resultMap>

	<sql id="Base_Column_List">
		id, IFNULL(resident_booklet_id,"") residentBooklet, IFNULL(name,"")name, IFNULL(relation,"")relation, IFNULL(sex,"")sex,
		IFNULL(native_place,"") nativePlace, IFNULL(nation,"") nation, IFNULL(id_card,"") idCard, IFNULL(contact,"") contact,
		IFNULL(marriage,"") marriage, IFNULL(education, "")education, IFNULL(politics,"") politics, IFNULL(religion,"") religion,
		IFNULL(speciality,"") speciality, IFNULL(certificate,"") certificate, IFNULL(slack_season,"") slackSeason,
		IFNULL(disadvantaged,"") disadvantaged,
		IFNULL(special,"") special, IFNULL(job_condition,"") jobCondition, IFNULL(job_intention,"") jobIntention,
		IFNULL(population_property,"") populationProperty, create_time createTime,
		update_time updateTime, is_delete isDelete, by1, by2
	</sql>

	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultType="hashmap">
		select
		<include refid="Base_Column_List" />
		from t_resident
		where id = #{id,jdbcType=BIGINT}
	</select>

	<update id="deleteByPrimaryKey" parameterType="java.lang.Long">
		update t_resident
		set is_delete = 1
		where id = #{id,jdbcType=BIGINT}
	</update>

	<update id="deleteByForKey" parameterType="java.lang.Integer">
		update t_resident
		set
		is_delete = 1
		where resident_booklet_id = #{residentBookletId}
	</update>

	<insert id="insert" parameterType="com.huike.app.archive.model.TResident">
		insert into t_resident
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="residentBookletId != null">
				resident_booklet_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="relation != null">
				relation,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="nativePlace != null">
				native_place,
			</if>
			<if test="nation != null">
				nation,
			</if>
			<if test="idCard != null">
				id_card,
			</if>
			<if test="contact != null">
				contact,
			</if>
			<if test="marriage != null">
				marriage,
			</if>
			<if test="education != null">
				education,
			</if>
			<if test="politics != null">
				politics,
			</if>
			<if test="religion != null">
				religion,
			</if>
			<if test="speciality != null">
				speciality,
			</if>
			<if test="certificate != null">
				certificate,
			</if>
			<if test="slackSeason != null">
				slack_season,
			</if>
			<if test="disadvantaged != null">
				disadvantaged,
			</if>
			<if test="special != null">
				special,
			</if>
			<if test="jobCondition != null">
				job_condition,
			</if>
			<if test="jobIntention != null">
				job_intention,
			</if>
			<if test="populationProperty != null">
				population_property,
			</if>
			<if test="xiangId != null">
				xiang_id,
			</if>
			<if test="cunId != null">
				cun_id,
			</if>
			create_time,
			update_time,
			<if test="isDelete != null">
				is_delete,
			</if>
			<if test="by1 != null">
				by1,
			</if>
			<if test="by2 != null">
				by2,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="residentBookletId != null">
				#{residentBookletId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="relation != null">
				#{relation,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
			</if>
			<if test="nativePlace != null">
				#{nativePlace,jdbcType=VARCHAR},
			</if>
			<if test="nation != null">
				#{nation,jdbcType=VARCHAR},
			</if>
			<if test="idCard != null">
				#{idCard,jdbcType=VARCHAR},
			</if>
			<if test="contact != null">
				#{contact,jdbcType=VARCHAR},
			</if>
			<if test="marriage != null">
				#{marriage,jdbcType=INTEGER},
			</if>
			<if test="education != null">
				#{education,jdbcType=INTEGER},
			</if>
			<if test="politics != null">
				#{politics,jdbcType=INTEGER},
			</if>
			<if test="religion != null">
				#{religion,jdbcType=VARCHAR},
			</if>
			<if test="speciality != null">
				#{speciality,jdbcType=VARCHAR},
			</if>
			<if test="certificate != null">
				#{certificate,jdbcType=VARCHAR},
			</if>
			<if test="slackSeason != null">
				#{slackSeason,jdbcType=VARCHAR},
			</if>
			<if test="disadvantaged != null">
				#{disadvantaged,jdbcType=INTEGER},
			</if>
			<if test="special != null">
				#{special,jdbcType=INTEGER},
			</if>
			<if test="jobCondition != null">
				#{jobCondition,jdbcType=VARCHAR},
			</if>
			<if test="jobIntention != null">
				#{jobIntention,jdbcType=VARCHAR},
			</if>
			<if test="populationProperty != null">
				#{populationProperty,jdbcType=VARCHAR},
			</if>
			<if test="xiangId != null">
				#{xiangId,jdbcType=BIGINT},
			</if>
			<if test="cunId != null">
				#{cunId,jdbcType=BIGINT},
			</if>
			now(),
			now(),
			<if test="isDelete != null">
				#{isDelete,jdbcType=INTEGER},
			</if>
			<if test="by1 != null">
				#{by1,jdbcType=VARCHAR},
			</if>
			<if test="by2 != null">
				#{by2,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.huike.app.archive.model.TResident">
		update t_resident
		<set>
			<if test="residentBookletId != null">
				resident_booklet_id = #{residentBookletId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="relation != null">
				relation = #{relation,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="nativePlace != null">
				native_place = #{nativePlace,jdbcType=VARCHAR},
			</if>
			<if test="nation != null">
				nation = #{nation,jdbcType=VARCHAR},
			</if>
			<if test="idCard != null">
				id_card = #{idCard,jdbcType=VARCHAR},
			</if>
			<if test="contact != null">
				contact = #{contact,jdbcType=VARCHAR},
			</if>
			<if test="marriage != null">
				marriage = #{marriage,jdbcType=INTEGER},
			</if>
			<if test="education != null">
				education = #{education,jdbcType=INTEGER},
			</if>
			<if test="politics != null">
				politics = #{politics,jdbcType=INTEGER},
			</if>
			<if test="religion != null">
				religion = #{religion,jdbcType=VARCHAR},
			</if>
			<if test="speciality != null">
				speciality = #{speciality,jdbcType=VARCHAR},
			</if>
			<if test="certificate != null">
				certificate = #{certificate,jdbcType=VARCHAR},
			</if>
			<if test="slackSeason != null">
				slack_season = #{slackSeason,jdbcType=VARCHAR},
			</if>
			<if test="disadvantaged != null">
				disadvantaged = #{disadvantaged,jdbcType=INTEGER},
			</if>
			<if test="special != null">
				special = #{special,jdbcType=INTEGER},
			</if>
			<if test="jobCondition != null">
				job_condition = #{jobCondition,jdbcType=VARCHAR},
			</if>
			<if test="jobIntention != null">
				job_intention = #{jobIntention,jdbcType=VARCHAR},
			</if>
			<if test="populationProperty != null">
				population_property = #{populationProperty,jdbcType=VARCHAR},
			</if>
			<if test="xiangId != null">
				xiang_id = #{xiangId,jdbcType=BIGINT},
			</if>
			<if test="cunId != null">
				cun_id = #{cunId,jdbcType=BIGINT},
			</if>
			update_time = now(),
			<if test="isDelete != null">
				is_delete = #{isDelete,jdbcType=INTEGER},
			</if>
			<if test="by1 != null">
				by1 = #{by1,jdbcType=VARCHAR},
			</if>
			<if test="by2 != null">
				by2 = #{by2,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="selectPageList" parameterType="java.util.Map"
		resultType="hashmap">
		select
		<include refid="Base_Column_List" />,
		IFNULL(xiang_id,"")
		xiangId,
		IFNULL((select village_name from t_village
		where id = xiang_id),"") as xiangName,
		IFNULL(cun_id,"")
		cunId,
		IFNULL((select village_name from t_village
		where id = cun_id),"") as
		cunName from t_resident where is_delete=0
		<if test="sex != null and sex != ''">
			and sex = #{sex,jdbcType=INTEGER}
		</if>
		<if test="residentBookletId != null and residentBookletId != ''">
			and resident_booklet_id =
			#{residentBookletId,jdbcType=INTEGER}
		</if>
		<if test="education != null and education != ''">
			and education = #{education,jdbcType=INTEGER}
		</if>
		<if test="politics != null and politics != ''">
			and politics = #{politics,jdbcType=INTEGER}
		</if>
		<if test="xiangId != null and xiangId != ''">
			and xiang_id = #{xiangId,jdbcType=INTEGER}
		</if>
		<if test="cunId != null and cunId != ''">
			and cun_id = #{cunId,jdbcType=INTEGER}
		</if>
		<if test="name != null and name != ''">
			and name like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
		</if>
		order by create_time desc limit #{offset}, #{show}
	</select>

	<select id="selectCountByMap" parameterType="hashmap"
		resultType="int">
		select count(1) from t_resident where is_delete=0
		<if test="sex != null and sex != ''">
			and sex = #{sex,jdbcType=INTEGER}
		</if>
		<if test="residentBookletId != null and residentBookletId != ''">
			and resident_booklet_id =
			#{residentBookletId,jdbcType=INTEGER}
		</if>
		<if test="education != null and education != ''">
			and education = #{education,jdbcType=INTEGER}
		</if>
		<if test="politics != null and politics != ''">
			and politics = #{politics,jdbcType=INTEGER}
		</if>
		<if test="xiangId != null and xiangId != ''">
			and xiang_id = #{xiangId,jdbcType=INTEGER}
		</if>
		<if test="cunId != null and cunId != ''">
			and cun_id = #{cunId,jdbcType=INTEGER}
		</if>
		<if test="name != null and name != ''">
			and name like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
		</if>
	</select>

	<select id="statisticsGroupByEducation" parameterType="hashmap"
		resultType="hashmap">
		SELECT
		count(1) value,
		CASE education
		WHEN 1 THEN
		'无文凭'
		WHEN 2 THEN
		'小学'
		WHEN 3 THEN
		'初中'
		WHEN 4 THEN
		'高中'
		WHEN 5 THEN
		'大专/高职'
		WHEN 6 THEN
		'本科'
		ELSE
		'研究生及以上'
		END AS name
		FROM
		t_resident
		WHERE
		is_delete = 0
		<if test="politics != null and politics != ''">
			and politics = #{politics,jdbcType=INTEGER}
		</if>
		<if test="xiangId != null and xiangId != ''">
			and xiang_id in
			<foreach item="item" index="index" collection="xiangId" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="cunId != null and cunId != ''">
			and cun_id in
			<foreach item="item" index="index" collection="cunId" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		GROUP BY
		education
	</select>

	<select id="statisticsGroupByPolitics" parameterType="hashmap"
		resultType="hashmap">
		SELECT
		count(1) value,
		CASE politics
		WHEN 1 THEN
		'群众'
		WHEN 2 THEN
		'共青团员'
		WHEN 3 THEN
		'预备党员'
		ELSE
		'党员'
		END AS name
		FROM
		t_resident
		WHERE
		is_delete = 0
		<if test="education != null and education !=''">
			and education = #{education,jdbcType=INTEGER}
		</if>
		<if test="xiangId != null and xiangId != ''">
			and xiang_id in
			<foreach item="item" index="index" collection="xiangId" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="cunId != null and cunId != ''">
			and cun_id in
			<foreach item="item" index="index" collection="cunId" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		GROUP BY
		politics
	</select>

	<select id="statisticsGroupByXiang" parameterType="hashmap"
		resultType="hashmap">
		SELECT
		count(1) AS value,
		(
		SELECT
		village_name
		FROM
		t_village
		WHERE
		id =
		a.xiang_id
		)AS name
		FROM
		(
		SELECT
		*
		FROM
		t_resident
		WHERE
		is_delete = 0
		<if test="xiangId != null and xiangId != ''">
			and xiang_id in
			<foreach item="item" index="index" collection="xiangId" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="education != null and education != ''">
			and education = #{education,jdbcType=INTEGER}
		</if>
		<if test="politics != null and politics !=''">
			and politics = #{politics,jdbcType=INTEGER}
		</if>
		)a
		GROUP BY
		xiang_id
	</select>

	<select id="statisticsGroupByCun" parameterType="hashmap"
		resultType="hashmap">
		SELECT
		count(1)AS value,
		(
		SELECT
		village_name
		FROM
		t_village
		WHERE
		id =
		a.cun_id
		)AS name
		FROM
		(
		SELECT
		*
		FROM
		t_resident
		WHERE
		is_delete = 0
		<if test="cunId != null and cunId != ''">
			and cun_id in
			<foreach item="item" index="index" collection="cunId" open="("
				separator="," close=")">
				#{item,jdbcType=INTEGER}
			</foreach>
		</if>
		<if test="education != null and education !=''">
			and education = #{education,jdbcType=INTEGER}
		</if>
		<if test="politics != null and politics !=''">
			and politics = #{politics,jdbcType=INTEGER}
		</if>
		)a
		GROUP BY
		cun_id
	</select>

</mapper>